image: docker:latest

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  image_name: "aria2"
  docker_namespace: "remyj38"
  tags_files: "tags"

before_script:
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - "[[ -d $tags_files ]] || mkdir $tags_files"

build-alpine:
  artifacts:
    expire_in: 1 day
    paths:
      - image-*.tar
      - $tags_files/
  only:
    - aria2
  script:
    - docker build --pull alpine/ | tee output.log
    - image_id=`cat output.log | tail -n1 | awk '{print $(NF)}'`
    - echo "$CI_REGISTRY_IMAGE/$image_name:latest" > "$tags_files/$image_id"
    - echo "$CI_REGISTRY_IMAGE/$image_name:alpine" >> "$tags_files/$image_id"
    - echo "$docker_namespace/$image_name:latest" >> "$tags_files/$image_id"
    - echo "$docker_namespace/$image_name:alpine" >> "$tags_files/$image_id"
    - docker save -o "image-$image_id.tar" "$image_id"
  stage: build

deploy:
  dependencies:
    - build-alpine
  only:
    - aria2
  script:
    - cd $tags_files
      # Load images
    - for image_id in *; do
        echo "Loading $image_id";
        docker load -q -i "../image-$image_id.tar";
      done
      # Tag images
    - for image_id in *; do
        while read tag; do
          docker tag "$image_id" "$tag";
        done <"$image_id";
      done
      # Push images
    - for image_id in *; do
        while read tag; do
          echo "Pushing $tag";
          docker push "$tag";
        done <$image_id;
      done
  stage: deploy
  when: on_success

